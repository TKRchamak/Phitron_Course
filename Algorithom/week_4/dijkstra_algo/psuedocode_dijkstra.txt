// input ---> a weighted graph and a source node
// output ----> distance of all nodes from the source node


// source theke baki node gulor distance ber korte hobe
// 1. select source node and make visited, set distance 0, and calculate the nearest single edge nodes distance = source node value + edge value.
// 2. find the smallest value but not visited, take this node as a source node and calculate again.



- create a distance array "d"
- initialize all value of "d" to infinity
- d[src] = 0;
- create a visited array and mark all node as unvisited

- for i=0 to i=n-1
    - pick the "unvisited" node with the shortest q[node]
    - visited[node]=1;
    - for all adj_node of node:
        - if d[node] + c(node, adj_node) < d[adj_node]
            d[adj_node] = d[node]+c(node, adj_node)

- output array "d"
